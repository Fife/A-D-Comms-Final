% Output Data Gathering Script
clc 
clear

%Part 1: Fourier Series
%Sampling Frequencies and Time Windows
f_s = 160000;                           % 160kHz Sampling Frequency
time_window = 0:1/f_s:0.01-1/f_s;       % Generate Time window from sampling frequency
terms = 5;
f_s_adc = 4000;

%Signal Generation: Time Domain and Frequency Domain
v_t = real(eval(ExponentialFourierSeriesJF(time_window, terms*2)));

figure
subplot(2,1,1);plot(time_window.*1000, v_t.*1000)
title("Signal Generation With Fourier Series");
xlabel("t (ms)");
ylabel("mV");

figure
v_f = fft(v_t);
plot(v_f)

plot(fft(v_f))


[freq, mag] = spectrum(v_t, f_s, time_window);
subplot(2,1,2);stem(freq, mag);
title("Single-Sided Spectrum of Signal Signal")
xlabel("f (Hz)")
ylabel("|V(f)|")


%Part 2: Analog 
figure
[vdsb, vssb, vlc] = AmplitudeModulationJF(time_window, v_t, f_s);
figure
AmplitudeDemodulation(time_window, vdsb, vssb,vlc, f_s)

figure 
vfm = FrequencyModulationJF(time_window, v_t, f_s);
figure
FrequencyDemodulation(time_window, v_t, f_s, vfm)

%Part 3: Digital

%PCM
figure
[time, output] = AnalogToDigitalJF(time_window, v_t, f_s, f_s_adc);
figure
DigitalToAnalog(output, time_window, f_s, v_t);

%ASK
figure
AmplitudeShiftKeyJF(time_window, output, f_s, f_s_adc)
figure
ASKDemodulation(time_window, output, f_s, f_s_adc)

%FSK
figure
fsk = FrequencyShiftKeyJF(time_window, output, f_s, f_s_adc, v_t);
figure
FSKDemod(time_window, fsk, output, f_s, f_s_adc)


%BPSK
figure
bpsk = BinaryPhaseShiftKeyJF(time_window, output, f_s, f_s_adc, v_t);
figure
BPSKDemod(time_window, bpsk, output, f_s, f_s_adc);

% %Part 4: M-ary
% %QPSK
% QuadriphaseShiftKeying;

